---
AWSTemplateFormatVersion: 2010-09-09

Description: AWS Aurora Demo

# Create the Aurora MySQL or PostgreSQL database(s). Currently, this template only supports alarms for Aurora MySQL.

Parameters:

  NetworkStackName:
    Description: Name of an active CloudFormation stack that contains networking resources
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*$"

  DatabaseUser:
    Default: admin
    Type: String
    Description: Database admin account name
    MinLength: 5
    MaxLength: 16
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: Name must begin with a letter and contain only alphanumeric characters

  DatabasePassword:
    NoEcho: true
    Type: String
    Description: Database admin account password
    MinLength: 6
    MaxLength: 41
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: Password must contain only alphanumeric characters

  DatabaseName:
    Default: DemoDB
    Type: String
    Description: Database name
    MinLength: 1
    MaxLength: 30
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: Name must begin with a letter and contain only alphanumeric characters

  DatabaseEngine:
    Default: aurora
    Type: String
    Description: Database engines - Aurora MySQL or Aurora PostgreSQL
    ConstraintDescription: Choose an engine from the drop down
    AllowedValues:
      - aurora
      - aurora-postgresql

  EncryptionAtRest:
    Default: false
    Type: String
    Description: The optional flag for encryption at rest (db.t2.small and above)
    ConstraintDescription: Only true or false are allowed
    AllowedValues:
      - true
      - false

  DatabaseInstanceClass:
    Default: db.t2.small
    Type: String
    Description: "Database instance class, e.g. db.t2.micro (free tier) - Engine support: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html"
    ConstraintDescription: DB instance class not supported

  EnvironmentName:
    Description: Environment name - dev or prod
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    ConstraintDescription: Specify either dev or prod

Conditions:

  IsProd: !Equals [ !Ref EnvironmentName, prod ]

  IsAuroraMySQL: !Equals [ !Ref DatabaseEngine, aurora ]

Resources:

  DatabaseSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Database subnet group
      SubnetIds:
      - subnet-ddcd3687
      - subnet-5d4be43b
      Tags:
      - Key: Name
        Value: !Ref AWS::StackName

  AuroraCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: !Ref DatabaseEngine
      MasterUsername: !Ref DatabaseUser
      MasterUserPassword: !Ref DatabasePassword
      DBSubnetGroupName: !Ref DatabaseSubnetGroup
      StorageEncrypted: !Ref EncryptionAtRest
      DatabaseName: !Ref DatabaseName
      DBClusterParameterGroupName: !If [ IsAuroraMySQL,  default.aurora5.6, default.aurora-postgresql9.6 ]
      Port: !If [ IsAuroraMySQL,  3306, 5432 ]
      VpcSecurityGroupIds:
        - sg-01b819743f1aa9a7f
    DependsOn: DatabaseSubnetGroup

  AuroraInstance0:
    Type: AWS::RDS::DBInstance
    Properties:
      Engine: !Ref DatabaseEngine
      DBClusterIdentifier: !Ref AuroraCluster
      DBInstanceClass: !Ref DatabaseInstanceClass
      DBSubnetGroupName: !Ref DatabaseSubnetGroup
      StorageEncrypted: !Ref EncryptionAtRest
      DBParameterGroupName: !If [ IsAuroraMySQL,  default.aurora5.6, default.aurora-postgresql9.6 ]
      CopyTagsToSnapshot: true
      Tags:
      - Key: Name
        Value: !Ref AWS::StackName
    DependsOn: AuroraCluster

  AuroraInstance1:
    Type: AWS::RDS::DBInstance
    Condition: IsProd
    Properties:
      Engine: !Ref DatabaseEngine
      DBClusterIdentifier: !Ref AuroraCluster
      DBInstanceClass: !Ref DatabaseInstanceClass
      DBSubnetGroupName: !Ref DatabaseSubnetGroup
      StorageEncrypted: !Ref EncryptionAtRest
      DBParameterGroupName: !If [ IsAuroraMySQL,  default.aurora5.6, default.aurora-postgresql9.6 ]
      CopyTagsToSnapshot: true
      Tags:
      - Key: Name
        Value: !Ref AWS::StackName
    DependsOn: AuroraCluster

Outputs:

  Name:
    Description: Aurora Stack Name
    Value: !Ref AWS::StackName
    Export:
      Name: !Sub ${AWS::StackName}-Name

  AuroraClusterId:
    Description: Aurora Cluster ID
    Value: !Ref AuroraCluster
    Export:
      Name: !Sub ${AWS::StackName}-AuroraClusterID

  AuroraDbURL:
    Description: Aurora Database URL
    Value: !GetAtt AuroraCluster.Endpoint.Address
    Export:
      Name: !Sub ${AWS::StackName}-DatabaseURL

  AuroraReadDbURL:
    Description: Aurora Database Read URL
    Value: !GetAtt AuroraCluster.ReadEndpoint.Address
    Export:
      Name: !Sub ${AWS::StackName}-DatabaseReadURL

  DbUser:
    Description: RDS Database admin account user
    Value: !Ref DatabaseUser
    Export:
      Name: !Sub ${AWS::StackName}-DatabaseUser

 